name: Deploy App

on:
  push:
    branches:
      - develop
      - main
      - 'feature/**'
    tags:
      - v**

permissions:
  id-token: write
  contents: read
  checks: write
  issues: read
  packages: read
  pull-requests: write

jobs:
  detectenv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detecting environment
        id: get_env
        run: |
          echo "Running on ${{ github.ref }}"
          echo "env_isFeature=false" >> $GITHUB_OUTPUT
          if [ "${{ github.ref_type }}" = "tag" ]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
            echo "env_suffix=p" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
            echo "env_suffix=p" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "env_name=development" >> $GITHUB_OUTPUT
            echo "env_suffix=d" >> $GITHUB_OUTPUT
          else
            echo "env_name=development" >> $GITHUB_OUTPUT
            echo "env_suffix=d" >> $GITHUB_OUTPUT
            echo "env_isFeature=true" >> $GITHUB_OUTPUT
          fi
    outputs:
      env_name: ${{ steps.get_env.outputs.env_name }}
      env_suffix: ${{ steps.get_env.outputs.env_suffix }}
      env_isFeature: ${{ steps.get_env.outputs.env_isFeature }}

  snyk:
    needs: [detectenv]
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.detectenv.outputs.env_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: snyk/actions/setup@master

      - name: Install python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Run snyk tests
        run: |
          pip install --upgrade pip
          #pip install --upgrade --force-reinstall --user -r './pyproject.toml'
          pip install -r './pyproject.toml'

          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test --all-projects --severity-threshold=high
          snyk code test --all-projects --severity-threshold=high
          if [ "${{ needs.detectenv.outputs.env_isFeature }}" = "false" ]; then
              snyk monitor --all-projects --severity-threshold=high --project-tags=application=aesdk,environment=${{ needs.detectenv.outputs.env_name }}
          fi