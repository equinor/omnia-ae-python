name: Deploy Azure Resources

on:
  workflow_dispatch:
    inputs:
      deployment:
        description: 'Deploy Azure resources'
        required: true
        default: 'false'


permissions:
  id-token: write
  contents: read
  checks: write
  issues: read
  packages: read

jobs:
  detectenv:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deployment }} == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Detecting environment
        id: get_env
        run: |
          echo "Running on ${{ github.ref }}"
          echo "env_isFeature=false" >> $GITHUB_OUTPUT
          if [ "${{ github.ref_type }}" = "tag" ]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
            echo "env_suffix=p" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/qa" ]; then
            echo "env_name=test" >> $GITHUB_OUTPUT
            echo "env_suffix=t" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "env_name=development" >> $GITHUB_OUTPUT
            echo "env_suffix=d" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
            echo "env_suffix=p" >> $GITHUB_OUTPUT
          else
            echo "env_name=development" >> $GITHUB_OUTPUT
            echo "env_suffix=d" >> $GITHUB_OUTPUT
            echo "env_isFeature=true" >> $GITHUB_OUTPUT
          fi

    outputs:
        env_name: ${{ steps.get_env.outputs.env_name }}
        env_suffix: ${{ steps.get_env.outputs.env_suffix }}
        env_isFeature: ${{ steps.get_env.outputs.env_isFeature }}
  
  deploy-resources:
    needs: [detectenv]
    if: ${{ github.event.inputs.deployment }} == 'true'
    runs-on: ubuntu-latest
    environment:
        name: ${{ needs.detectenv.outputs.env_name }}
    env:
        AZURE_DEVOPS_KV_COMMON_NAME: 'kv-devops-${{ needs.detectenv.outputs.env_suffix }}'
        AZURE_DEVOPS_KV_APP_NAME: 'kv-devops-aeapi-${{ needs.detectenv.outputs.env_suffix }}'
        AZURE_RG: '${{ secrets.AZURE_RESOURCEGROUP }}-${{ needs.detectenv.outputs.env_suffix }}'
        AZURE_APP_FULL_NAME: 'app-${{ secrets.AZURE_APP_NAME }}-${{ needs.detectenv.outputs.env_suffix }}'

    steps:
        - uses: actions/checkout@v4
        - uses: actions/checkout@v4
          name: Checkout infrastructure templates
          with:
            repository: 'equinor/iiot-infrastructure-templates'
            ref: main
            path: './templates'
            ssh-key: ${{ secrets.GH_READ_PRIVATE_KEY }}
        - name: Log in with Azure
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        - name: Deploy resources
          id: resources
          run: |
            cp ./templates/bicep/* ./src/Deployment/

            function get_common_secret() {
            echo -n $(az keyvault secret show --name $1 --vault-name ${{ env.AZURE_DEVOPS_KV_COMMON_NAME }} --query value --output tsv)
            }
            function get_app_secret() {
            echo -n $(az keyvault secret show --name $1 --vault-name ${{ env.AZURE_DEVOPS_KV_APP_NAME }} --query value --output tsv)
            }

            az deployment group create \